template(name='recipes')
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.inline.header 
                +i name='blog'
                |#{recipe_docs.count}
                |recipes
            // if currentUser
            a.ui.icon.circular.button.add_recipe(title='add recipe')
                i.plus.green.large.icon
            
            .ui.left.icon.search.small.input
                i.search.icon.refresh_tags
                input#search_tag.prompt(type='text' autocomplete="off" placeholder='tags')
            if selected_tag_plural
                .ui.icon.circular.black.compact.button.clear_picked_tags
                    i.remove.icon
            each picked_tags
                button.ui.blue.compact.circular.small.button.unselect_tag(tabindex='0')
                    //- i.remove.icon
                    | #{this}
            each tags
                button.ui.circular.compact.button.tag_result(tabindex="0" class=result_class title=count) #{title}
                    //- small #{count}
            // +key_value_edit key='view_private' value=true  label='view private'
            // +key_value_edit key='view_private' value=false label='view all'
            .spacer
            .ui.list 
                .item [
                .item   Recipe {
                .item     uuid: String
                .item     title: String
                .item     description: String
                .item     images: {
                .item       full: String
                .item       medium: String,
                .item       small: String
                .item     }
                .item     servings: Number
                .item     prepTime: Number
                .item     cookTime: Number
                .item     postDate: Date
                .item     editDate: Date
                .item     ingredients: [
                .item       Ingredient {
                .item         uuid: String
                .item         amount: Number
                .item         measurement: String
                .item         name: String
                .item       }
                .item     ]
                .item     directions: [
                .item       Direction {
                .item         instructions: String
                .item         optional: Boolean
                .item       }
                .item     ]
                .item   }
                .item ]
            .ui.button.get_data
                +i name='refresh'
                |refresh CC demo data
            
        .twelve.wide.column
            // .ui.inline.header CC demo data 
            .sorting_row
                .ui.icon.input
                    i.search.icon
                    input.tag_search(type='text' placeholder='search...')
                +key_value_edit key='sort_key' value='_timestamp' label='added' icon='clock'
                +key_value_edit key='sort_key' value='comment_count' label='comment count' icon='chat'
                |&nbsp;
                |&nbsp;
                +limit_menu
            .spacer 
            .ui.stackable.three.cards.scrolling
                each recipe_docs
                    +recipe_card


template(name='recipe_card')
    .ui.card(class=recipe_card_class)
        a.image.zoomer(href="/recipe/#{_id}")
            if image_id
                img.ui.zoomer.pointer.goto_recipe.image(src="{{c.url image_id width=400 height=400}}")
            else if images.full
                img(src=images.full)
        .content
            a.ui.header.zoomer(href="/recipe/#{_id}/") 
                | #{title}
            a.zoomer.pointer.zoomer(href="/recipe/#{_id}/") 
                |!{description}
            if tags
                +ismall name='tags'
                each tags
                    .ui.small.basic.label #{this}
        .content
            .right.floated.meta
                | {{from_now _timestamp}}
            a(href="/user/#{author.username}")
                img.ui.avatar.image(src="{{c.url author.image_id width=400 height=600 crop='fit'}}")
                |#{author.username}
        .content    
            if private 
                i.big.lock.icon
            if can_edit
                a.ui.icon.button(href="/recipe/#{_id}/edit")
                    i.pencil.icon
            a.ui.icon.button(href="/recipe/#{_id}")
                i.right.chevron.icon


template(name='recipe_view')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column 
                    a.ui.compact.circular.button.fly_left(href="/recipes")
                        i.left.chevron.icon
                        +i name='food' cl='ui inline image'
                        // |recipes
                    .ui.small.grey.header 
                        small viewing recipe
                        // strong #{title}
                    // if can_edit
                    a.ui.icon.circular.button(href="/recipe/#{_id}/edit")
                        i.pencil.large.icon
                    .ui.header source: #{source}
                    +voting_full
                    +viewing
                    if in_dev 
                        +print_this
                    +view_visibility
                    +author_card
                .eight.wide.column
                    if title
                        h1.ui.header #{title} 
                    +image_view key='image_id' label='image' direct=true
                    +image_view key='images.full' label='image' direct=true
                    +image_view key='images.medium' label='image' direct=true
                    +image_view key='small' label='image' direct=true
                    .f6
                        +html_view key='description' icon='content' label='body' direct=true
                    +array_view key='location_tags' label='location tags' icon='marker' direct=true
                    +array_view key='tags' label='tags' icon='tags' direct=true
                    div
                    +comments
                    if watson 
                        +watson_view
                .four.wide.column
                    if can_purchase
                        .ui.header 
                            +i name='coins' cl='ui avatar image'
                            |purchase price: #{purchase_price}pt
                        +purchase_recipe_button
                        +recipe_orders
                    .item   Recipe {
                    +text_view key='uuid' label='uuid' direct=true
                    +text_view key='title' label='title' direct=true
                    .item     description: String
                    img(src=images.full)
                    img(src=images.medium)
                    img(src=images.small)
                    .item     images: {
                    .item       full: String
                    .item       medium: String,
                    .item       small: String
                    .item     }
                    +image_view key='images.full' label='full' icon='image' direct=true
                    +image_view key='medium' label='medium' icon='image' direct=true
                    +image_view key='small' label='small' icon='image' direct=true

                    .item     servings: Number
                    +number_view key='servings' label='servings'
                    .item     prepTime: Number
                    +number_view key='prepTime' label='prep time' icon='clock' direct=true
                    .item     cookTime: Number
                    +number_view key='prepTime' label='cook time' icon='oven' direct=true
                    .item     postDate: Date
                    +date_view key='postDate' label='post date' icon='pencil' direct=true
                    .item     editDate: Date
                    +date_view key='postDate' label='post date' icon='pencil' direct=true
                    .item     ingredients: [
                    .item       Ingredient {
                    .item         uuid: String
                    .item         amount: Number
                    .item         measurement: String
                    .item         name: String
                    .item       }
                    .item     ]
                    .item     directions: [
                    .item       Direction {
                    .item         instructions: String
                    .item         optional: Boolean
                    .item       }
                    .item     ]
                        
                
                
                
template(name='purchase_recipe_button')                
    unless has_purchased
        .ui.button.purchase_recipe
            |purchase recipe for #{purchase_price}
    else 
        .ui.header 
            |purchased on {{medium_date purchase_timestamp}}
                
                
template(name='recipe_orders')
    .ui.header
        +i name='order-history'
        |recipe orders 
    .ui.selection.link.animated.list
        each recipe_order_docs 
            a.item.fly_right(href="/order/#{_id}")
                |#{when}
                |#{_author_username}
    
        
                

template(name='recipe_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column
                    .ui.header 
                        small editing recipe
                        strong #{title}
                    a.ui.big.icon.green.button(href="/#{model}/#{_id}" title='save')
                        i.checkmark.big.icon
                    +remove_button
                    +image_edit key='image_id' label='image' direct=true
                    +visibility_settings
                    +array_edit key='tags' label='tags' icon='tags' direct=true
                    +array_edit key='location_tags' label='location tags' icon='marker' direct=true
                    // +boolean_edit key='private' label='private' direct=true
                    if in_dev 
                        +text_edit key='model' label='model' direct=true
                .seven.wide.column 
                    +text_edit key='title' direct=true
                    +html_edit key='body' label='body' icon='content' direct=true
                .four.wide.column
                    .item   Recipe {
                    +text_edit key='uuid' label='uuid'
                    +text_edit key='title' label='title'
                    .item     description: String
                    .item     images: {
                    .item       full: String
                    .item       medium: String,
                    .item       small: String
                    .item     }
                    +image_edit key='full' label='full' icon='image' direct=true
                    +image_edit key='medium' label='medium' icon='image' direct=true
                    +image_edit key='small' label='small' icon='image' direct=true

                    .item     servings: Number
                    +number_edit key='servings' label='servings'
                    .item     prepTime: Number
                    +number_edit key='prepTime' label='prep time' icon='clock' direct=true
                    .item     cookTime: Number
                    +number_edit key='prepTime' label='cook time' icon='oven' direct=true
                    .item     postDate: Date
                    +date_edit key='postDate' label='post date' icon='pencil' direct=true
                    .item     editDate: Date
                    +date_edit key='postDate' label='post date' icon='pencil' direct=true
                    .item     ingredients: [
                    .item       Ingredient {
                    .item         uuid: String
                    .item         amount: Number
                    .item         measurement: String
                    .item         name: String
                    .item       }
                    .item     ]
                    .item     directions: [
                    .item       Direction {
                    .item         instructions: String
                    .item         optional: Boolean
                    .item       }
                    .item     ]
                
                    +boolean_edit key='can_purchase' label='charge for access' direct=true icon='coins'
                    if can_purchase 
                        +number_edit key='purchase_price' label='purchase price' direct=true icon='coins'
