template(name='shop')
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.inline.header 
                // +i name='shop'
                |#{counter}
                // |results
            if currentUser
                a.ui.icon.compact.button.add_product(title='add product')
                    i.plus.large.icon
            // .div
            // .ui.button
            //     i.money.icon
            //     |affordable
            // .ui.button
            //     i.checkmark.icon
            //     |available
            // .ui.button
            //     i.user.icon
            //     |by me
            // .ui.button
            //     i.large.shopping.cart.icon
            //     |for sale
            // .ui.button
            //     i.large.clock.icon
            //     |rentals
            // .ui.button
            //     i.large.wrench.icon
            //     |services
            // .ui.left.icon.search.small.input
            //     i.search.icon.refresh_tags
            //     input#search_tag.prompt(type='text' autocomplete="off" placeholder='tags')
            div
            .ui.inline.header
                i.user.icon 
                |authors
            each picked_authors
                button.ui.blue.compact.small.button.unselect_tag(tabindex='0')
                    //- i.remove.icon
                    | #{this}
            each unpicked_authors
                button.ui.compact.small.button.tag_result(tabindex="0" class=result_class title=count) #{title}
                    //- small #{count}
            div
            .ui.inline.header
                i.marker.icon 
                |location tags
            each picked_location_tags
                button.ui.blue.compact.small.button.unselect_tag(tabindex='0')
                    //- i.remove.icon
                    | #{this}
            each unpicked_location_tags
                button.ui.compact.small.button.tag_result(tabindex="0" class=result_class title=count) #{title}
                    //- small #{count}
            // .spacer
                .ui.icon.input
                    i.search.icon
                    input.query(type='text' placeholder='search...')
                |sort by
                +set_sort_key key='views' label='views' icon='eye'
                // +set_sort_key key='datetime_available' label='available' icon='clock'
                +set_sort_key key='price' label='price' icon='money'
                +set_sort_key key='_timestamp' label='added' icon='clock'
                +set_sort_key key='comment_count' label='comment count' icon='chat'
                +set_sort_direction
                |&nbsp;
                |&nbsp;
                +limit_menu
        .twelve.wide.column
            .sorting_row
                if selected_tag_plural
                    .ui.icon.black.compact.button.clear_picked_tags
                        i.remove.icon
                each picked_tags
                    button.ui.blue.compact.large.button.unselect_tag(tabindex='0')
                        //- i.remove.icon
                        | #{this}
                each tags
                    button.ui.compact.button.tag_result(tabindex="0" class=result_class title=count) #{title}
                        //- small #{count}
            .spacer 
            if subs_ready     
                .ui.stackable.three.centered.cards.scrolling
                    each product_docs
                        +product_card
                    unless product_docs.count
                        .ui.button.request_product
                            |request
                        each requests
                            .ui.header #{when}
            else 
                .ui.center.aligned.basic.segment
                    i.massive.grey.yin.yang.loading.icon


template(name='product_card')
    .ui.card(class=product_card_class)
        a.image.fly_right(href="/product/#{_id}/") 
            img.ui.zoomer.pointer.goto_product.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
        .content
            a.ui.inline.header.zoomer.fly_right(href="/product/#{_id}/") 
                | #{title}
            .ui.inline.header #{point_price}p
            
            each tags
                a.ui.small.link.label.flat_pick_tag.spaced #{this}
            .right.floated.meta
                | #{when}
            a(href="/user/#{_author_username}")
                img.ui.avatar.image(src="{{c.url _author.image_id width=400 height=600 crop='fit'}}")
                |#{_author_username}
            if is_rentable
                i.clock.large.icon
            if is_service
                i.wrench.large.icon
            if is_forsale
                i.cart.icon
                // .ui.label #{inventory} units available
                // .ui.label #{order_total} total orders
                if delivery
                    +i name='deliver-product' cl='ui avatar image'
                    if delivery_fee
                        .ui.inline.header(title='delivery fee') $#{delivery_fee}
                if open
                    +i name='checkmark' cl='ui avatar image'
                else 
                    i.ban.icon(title='not open to new orders')
                if pickup
                    +i name='doormat' cl='ui avatar image'
            if can_edit
                a.ui.large.icon.button(href="/product/#{_id}/edit")
                    i.pencil.icon
            if currentUser 
                i.thumbs.up.link.grey.icon.upvote
                i.thumbs.down.link.grey.icon.downvote
        //- .ui.bottom.attached.buttons        
        //-     .ui.green.button.quickbuy
        //-         i.lightning.icon
        //-         |buy
        //-     a.ui.button(href="/product/#{_id}/")
        //-         |view
        //-         i.right.chevron.icon


