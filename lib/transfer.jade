template(name='transfers')
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.inline.header 
                +i name='exchange'
                |#{transfer_docs.count}
                |transfers
            if currentUser
                +add_doc_button model='transfer'
            +facet key='tag' model='transfer'
        .twelve.wide.column
            span.sorting_row
                +session_set key='view_mode' value='grid' icon='th'
                +session_set key='view_mode' value='list' icon='list'
                +search_input key='title' model='transfer'
                +sort_direction_toggle
                +set_sort_key key='member_ids' label='$/serving' icon='money'
                +set_sort_key key='private' label='available' icon='clock'
                +set_sort_key key='_timestamp' label='added' icon='clock'
                +set_sort_key key='comment_count' label='comment count' icon='chat'
                |&nbsp;
            if session_is 'view_mode' 'grid'
                if one_result
                    .ui.stackable.one.cards.scrolling
                        each transfer_docs
                            +transfer_card
                else
                    .ui.stackable.three.cards.scrolling
                        each transfer_docs
                            +transfer_card
            else
                .ui.selection.divided.animated.list.scrolling
                    each transfer_docs 
                        +transfer_item


template(name='transfer_card')
    .ui.card.zoomer
        if image_id
            a.image.zoomer.fly_right(href="/doc/#{_id}")
                img.ui.image(src="{{c.url image_id width=600 height=600}}")
        .content
            with _target
                +user_info
            with _author
                +user_info
            each tags
                .ui.label #{this}
            .smallscroll
                |!{description}
            // +ismall name='tags' cl='ui inline image'
            a.ui.icon.button.zoomer(href="/doc/#{_id}")
                i.chevron.right.icon
            +view_span
            // if is_admin
            //     .ui.small.header slug: #{slug}
            +print_this
     
     
template(name='view_span')
    span(title='views')
        i.grey.eye.icon 
        |#{views}
                    
template(name='transfer_item')
    .item
        if image_id
            a.image.zoomer.fly_right(href="/doc/#{_id}")
                img.ui.image(src="{{c.url image_id width=600 height=600}}")
        .content
            with _target
                +user_info
            with _author
                +user_info
            .ui.label 
                |#{when}
            each seven_tags
                .ui.label #{this}
            span.smallscroll
                |!{description}
            // +ismall name='tags' cl='ui inline image'
            a.ui.icon.button.zoomer.fly_right(href="/doc/#{_id}")
                i.chevron.right.icon
            +view_span
            // if is_admin
            //     .ui.small.header slug: #{slug}
            +print_this
                    

template(name='transfer_view')
    .ui.stackable.padded.grid
        .centered.row 
            .five.wide.column
                a(href="/user/#{_author.username}") 
                    img.ui.circular.centered.pointer.zoom.image(src="{{c.url _author.image_id height=500 width=500 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                    .ui.large.center.aligned.header.pointer.zoom
                        |#{_author.name}
            .five.wide.column
                .ui.huge.center.aligned.header
                    |#{amount}pts
                if in_dev
                    +remove_button
                    a.ui.icon.button(href="/doc/#{_id}/edit")
                        i.pencil.icon
                .f14
                    |!{description}
                .spacer
                
                +image_view key='image_id' label='image' direct=true
                div 
                if tags
                    i.tags.icon
                    each tags 
                        .ui.big.basic.circular.label #{this}
                +voting_full
                +print_this
                .ui.small.header
                    i.clock.icon
                    | #{when}
                .spacer
                .spacer
                +comments
                //- +array_view key='location_tags' label='location_tags' direct=true
            .five.wide.column
                a.fly_right(href="/user/#{_target.username}")
                    img.ui.circular.centered.fluid.pointer.zoom.image(src="{{c.url _target.image_id height=500 width=500 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                    .ui.large.center.aligned.header.pointer.zoom
                        |#{_target.name}
                            

template(name='transfer_edit')
    .ui.stackable.padded.grid
        .row 
            .five.wide.column
                .ui.large.fluid.basic.circular.button.cancel_transfer
                    i.large.remove.red.icon
                    |cancel
                if in_dev
                    +print_this
                .ui.segment
                    .ui.inline.grey.header sender
                    .ui.inline.header
                        img.ui.small.image(src="{{c.url _author.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                        |#{_author.name}
                .ui.segment
                    .ui.header _target
                    with _target
                        i.large.remove.link.icon.remove_target
                        a.pointer(href="/user/#{name}")
                            img.ui.tiny.inline.image(src="{{c.url image_id height=400 width=400 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            .ui.inline.header #{name}
                            .ui.small.grey.inline.header #{points}
                    unless _target
                        .ui.divider
                        // i.large.user.plus.icon
                        +single_user_edit key='target_user_id' label='search member' icon='user plus' direct=true
                        // .ui.icon.input
                        //     i.search.icon
                        //     input.search_username(type='text' placeholder='username')
                        // each members
                        //     .ui.compact.basic.circular.button.add__target
                        //         // i.plus.icon
                        //         img.ui.avatar.image(src="{{c.url profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                        //         |#{name}
                        //         small #{points}p
                // +boolean_edit key='has_date' label='has date' icon='calendar' direct=true
                // if has_date
                +date_edit key='date' label='date' direct=true   
                // +boolean_edit key='has_time' label='has time' icon='clock' direct=true
                // if has_time
                +time_edit key='time' label='time' direct=true   
                +array_edit key='location_tags' label='location tags' icon='marker' direct=true
            .six.wide.column
                // +boolean_edit key='has_description' label='has description' icon='content' direct=true
                // if has_description
                +html_edit key='description' label='description' direct=true
                // +boolean_edit key='has_image' label='has image' icon='image' direct=true
                // if has_image
                +image_edit key='image_id' label='image' direct=true
                div
                +array_edit key='tags' label='tags'
                // .ui.inline.header
                //     i.tag.red.icon
                //     |tags
                // .ui.input
                //     input.new_tag(type='text' placeholder='+' autocomplete="off")
                //     //- +clear_value                
                // each terms 
                //     a.ui.large.circular.basic.button.select_term(href='#')
                //         if image
                //             img.ui.mini.rounded.inline.image(src="{{c.url image height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                //         |#{title}
                each tags
                    .ui.big.basic.circular.label
                        i.delete.icon.remove_element
                        |#{this}
                // if suggestions
                //     .ui.small.inline.header suggestions
                // each suggestions
                //     a.ui.large.circular.basic.button.select_term(href='#')
                //         // if image
                //         //     img.ui.mini.rounded.inline.image(src="{{c.url image height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                //         |#{title}
            .five.wide.center.aligned.column
                .ui.big.header #{amount}pts
                .ui.big.input
                    input.point_amount(type='number' value=amount min='1' max=point_max)
                div
                +key_value_edit key='amount' value=1
                +key_value_edit key='amount' value=5
                +key_value_edit key='amount' value=10
                +key_value_edit key='amount' value=20
                +key_value_edit key='amount' value=50
                .spacer
                .ui.center.aligned.basic.segment
                    if can_submit
                        .ui.green.huge.circular.button.submit
                            i.big.send.icon
                            |send
                    else 
                        .ui.green.huge.circular.disabled.button
                            i.send.big.icon
                            |send
                            
                                
                                
        