template(name='music')
    .ui.stackable.padded.grid 
        .sixteen.wide.column
            .ui.inline.header 
                i.music.icon
                |#{artist_docs.count} artists
            .ui.input 
                input.artist_search(type='text' placeholder='search artist...')
            +i name='tags'
            |tags
            each picked_music_tags
                button.ui.blue.compact.circular.button.unpick_tag(tabindex='0')
                    //- i.remove.icon
                    | #{this}
            each music_tag_results
                button.ui.circular.compact.black.button.pick_tag(tabindex="0" class=result_class title=count)
                    |#{name}
                    // small #{count}

            +i name='music'
            |genre
            each picked_genres
                button.ui.blue.compact.circular.button.unpick_genre(tabindex='0')
                    //- i.remove.icon
                    | #{this}
            each genre_results
                button.ui.circular.compact.black.button.pick_genre(tabindex="0" class=result_class title=count)
                    |#{name}
                    // small #{count}
            +i name='artist'
            |style
            each picked_styles
                button.ui.blue.compact.circular.button.unpick_style(tabindex='0')
                    //- i.remove.icon
                    | #{this}
            each style_results
                button.ui.circular.compact.black.button.pick_style(tabindex="0" class=result_class title=count)
                    |#{name}
                    // small #{count}
            +i name='happy'
            |mood
            each picked_moods
                button.ui.blue.compact.circular.button.unpick_mood(tabindex='0')
                    //- i.remove.icon
                    | #{this}
            each mood_results
                button.ui.circular.compact.black.button.pick_mood(tabindex="0" class=result_class title=count)
                    |#{name}
                    // small #{count}
        .sixteen.wide.column.scrolling
            .ui.centered.stackable.doubling.cards
                each artist_docs 
                    +artist_card
            // .ui.inline.header search songs
            // .ui.input 
            //     input(type='text' placholder='song...')
            // .ui.list 
            //     each song_docs 
            //         .ui.header #{title}
            // .ui.inline.header search albums
            // .ui.input 
            //     input(type='text' placholder='album...')
            // .ui.list 
            //     each album_docs 
            //         .ui.header #{title}
            

template(name='artist_card')
    a.card.fly_right(href="/music/artist/#{_id}" title='view artist')
        img.ui.image(src=strArtistThumb)
        .content
            .header #{strArtist}
            .description
                .ui.inverted.label
                    i.smile.icon
                    |#{strGenre}
                .ui.inverted.label
                    i.smile.icon
                    |#{strStyle}
                .ui.inverted.label
                    i.smile.icon
                    |#{strMood}
                each five_tags
                    .ui.inverted.label #{this}
                |added #{_when}

template(name='music_artist')
    with current_artist 
        .ui.stackable.padded.grid 
            .eight.wide.column
                a.ui.inverted.big.button.fly_left(href='/music')
                    i.chevron.left.icon
                    i.music.large.icon
                    |music
                img.ui.image(src=strArtistThumb)
                .ui.header views: #{views}
                +voting
                each tags 
                    .ui.black.inverted.label #{this}
            .eight.wide.column
                .header #{strArtist}
                .ui.large.list
                    .item #{strArtistStripped}: strArtistStripped
                    .item #{strArtistAlternate}: strArtistAlternate
                    .item #{strLabel}: strLabel
                    .item #{idLabel}: idLabel
                    .item #{intFormedYear}: intFormedYear
                    .item #{intBornYear}: intBornYear
                    .item #{intDiedYear}: intDiedYear
                    .item #{strDisbanded}: strDisbanded
                    .item #{strStyle}: strStyle
                    .item #{strGenre}: strGenre
                    .item #{strMood}: strMood
                    .item #{strWebsite}: strWebsite
                    .item #{strFacebook}: strFacebook
                    .item #{strTwitter}: strTwitter
                |#{strBiographyEN}
                +call_watson key='strBiographyEN'
                +comments
            .sixteen.wide.column
                if watson 
                    +watson_view_full
