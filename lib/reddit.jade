template(name='reddit')
    .ui.stackable.padded.grid
        .row
            .four.wide.column
                each picked_tags
                    button.ui.active.compact.big.rounded.fade.animated.button.unpick_tag(tabindex="0" class="#{loading_class} #{active_term_class}")
                        .visible.content
                            .ui.inline.small.header #{this}
                        .hidden.content
                            i.minus.icon
                            .ui.inline.small.header #{this}
                            
                        //- button.ui.active.large.button.unpick_tag(tabindex='0' style=background_style class=emotion_color)
                //- .ui.inline.small.header(class=emotion_color) {{fixed omega_doc.current_max_emotion_percent}}% #{omega_doc.current_most_emotion}
                // if not_searching 
                //     .ui.center.aligned.basic.segment
                //         i.massive.yin.yang.grey.icon
                // +session_toggle key='view_images' label='images' icon='image'
                // +session_toggle key='view_external' label='external' icon='external'
                .ui.icon.search.input(class=search_class)
                    // if is_loading
                    //     if home_subs_ready
                    unless is_loading
                        i.search.link.icon.refresh_agg
                        // i.yin.yang.big.loading.link.icon.reconnect
                    if is_loading
                        i.yin.yang.big.loading.icon
                    //- input#search(type='text' autofocus='' autocomplete="off" value=current_query)
                    input#search(type='text' autofocus='' autocomplete="off" placeholder='search reddit...')
                //- .ui.header #{connection.status}
                unless connected
                    //- .ui.header disconnected
                    //- .ui.hidden.divider
                    .ui.big.button
                        i.lightning.invert.big.link.icon
                        |reconnect
                //- div
                if connected
                    // if searching 
                    //     each terms 
                    //         +search_term
                    // else 
                    each unpicked_tags
                        +agg_tag
                    // div
                    // .ui.inline.small.header
                    //     i.large.globe.icon(title='domains')
                    //     |domain
                    // if picked_domain
                    //     .ui.button.unpick_domain #{picked_subreddit}
                    // each domain_results
                    //     .ui.large.image.link.inverted.basic.label.zoomer.pick_domain #{name}
                    // div
                    // .ui.inline.small.header
                    //     i.large.reddit.icon(title='domains')
                    //     |subreddit
                    // if picked_subreddit
                    //     .ui.button.unpick_subreddit #{picked_subreddit}
                    // each subreddit_results
                    //     .ui.large.image.link.inverted.basic.label.zoomer.pick_subreddit #{name}
                // if in_dev 
                //     .ui.divider
                //     .ui.header is_loading #{is_loading}
                //     .ui.header current query  {{sval 'current_query'}}
                //     .ui.header dummy  {{sval 'dummy'}}
                // .ui.items
                // if doc_results
                //     .ui.divider
                // .ui.animated.big.link.divided.list.scrolling
                // .ui.hidden.divider
            .twelve.wide.column
                span.sorting
                    +session_icon_button key='view_mode' value='grid' icon='grid' 
                    +session_icon_button key='view_mode' value='list' icon='list'
                    +sort_direction_toggle
                    +session_set key='sort_key' value='_timestamp' label='added' icon='clock'
                    +session_set key='sort_key' value='comment_count' label='comments' icon='chat'
                    +session_set key='sort_key' value='domain' label='domain' icon='globe'
                    +session_set key='sort_key' value='ups' label='ups' icon='thumbs up'
                    if currentUser
                        +session_boolean_toggle key='view_nsfw' label='view nsfw' icon='18-plus'
                .ui.hidden.divider
                .ui.stackable.centered.cards.scrolling
                    if subs_ready
                        if session_is 'view_mode' 'grid'
                            each doc_results
                                +reddit_card
                            // +small_card
                        else
                            .ui.selection.animated.list 
                                each doc_results
                                    +reddit_item
template(name='reddit_card')
    .card
        if is_image
            a(href="/reddit/#{_id}")
                img.ui.image.zoomer(src=url title='view article')
        else if has_thumbnail
            a(href="/reddit/#{_id}")
                img.ui.image.zoomer(src=thumbnail title='view article')
        if rd.selftext_html
            |!{unescaped}
        if rd.media_embed.content
            // .invert
            |!{unescaped_content}

        .content 
            a.ui.small.header.zoomer(href="/reddit/#{_id}") !{title}
            .ui.inverted.basic.label
                i.globe.grey.icon 
                |#{domain}
            .ui.inverted.basic.label
                i.thumbs.up.icon 
                |#{ups}
            .ui.inverted.basic.label
                i.comment.icon 
                |#{num_comments}
            .ui.inverted.basic.label.zoomer.pick_subreddit
                |subreddit: #{subreddit}
            .ui.inverted.basic.label added #{_when}
            if over_18
                .ui.inverted.red.label.invert
                    +i name='nsfw'
            +print_this
            if doc_sentiment_label
                +doc_sentiment
                +doc_emotion
        
template(name='reddit_item')
    a.item.fly_right.zoomer(href="/reddit/#{_id}" title='view article') 
        if is_image
            img.ui.inline.medium.image.rounded(src=url)
        else if thumbnail
            a(href="/reddit/#{_id}")
                img.ui.medium.inline.image.zoomer(src=thumbnail title='view article')
        .ui.inline.header !{title}
        .ui.inverted.basic.label
            i.globe.grey.icon 
            |#{domain}
        .ui.inverted.basic.label
            i.thumbs.up.icon 
            |#{ups}
        .ui.inverted.basic.label
            i.comment.icon 
            |#{num_comments}
        .ui.inverted.basic.label 
            |subreddit: #{subreddit}
        .ui.inverted.basic.label added #{_when}
        if over_18
            .ui.inverted.basic.red.label.invert over 18
        +voting_full
// template(name='session_toggle')
//     .ui.button.toggle
//         i.large.icon(class=icon)
        
                   
template(name='shortcut')                   
    i.big.icon.go.spaced.zoomer(class=icon title=key)
                    
template(name='agg_tag')
    // button.ui.big.compact.basic.active.fade.animated.button.result(tabindex="0" title=count)
    button.ui.big.compact.basic.active.inverted.button.result(tabindex="0" title=count)
        // .visible.content
        if term_image
            img.ui.avatar.image(src="{{c.url term_image.image_id width=200 height=200 gravity='face' crop='fill'}}")

        | #{name}
        // .hidden.content
        //     |+ #{title}
        // if term.image
        //     //- button.ui.compact.button(tabindex="0" title=count)
        //     //- img.ui.mini.inline.image(src=term.image)
        //     img.ui.mini.inline.image(src=term.image)
        //     .ui.inline.small.thin.header(class=tag_result_class) #{title}
        // else
        //     //- button.ui.compact.button(tabindex="0" title=count)
        //- small #{count}


template(name='reddit_view')
    with current_doc 
        .ui.stackable.padded.grid 
            .eleven.wide.column
                a.ui.button(href="/reddit")
                    +i name='reddit'
                    |reddit
                .ui.inline.header !{title}
                .scrolling
                    if rd.selftext_html
                        |!{unescaped}
                    // blockquote(class="imgur-embed-pub invert" lang="en" data-id="UsxLSe0")
                    //     a(href=rd.url) Lauren, supergirl, batgirl [Super best friends &amp; lauren faust])
                    // script(async src="//s.imgur.com/min/embed.js" charset="utf-8")
                    a.ui.header(href=rd.url target='_window') #{rd.url}
                    with rd
                        embed(src=url)
                    if rd.media_embed
                        // .invert
                        |!{unescaped_content}
                    // +call_watson key=rd.selftext
                    if watson 
                        +watson_view
                    if in_dev
                        +print_this
                    if is_image
                        img.ui.image(src=url)
            .five.wide.column
                if thumbnail
                    img.ui.centered.rounded.image(src=thumbnail)
                .ui.list 
                    .item comment_count #{comment_count}
                    .item domain #{domain}
                    // .item model #{model}
                    .item over_18 #{over_18}
                    .item permalink #{permalink}
                    .item reddit_id #{reddit_id}
                    .item 
                        small mined by
                        strong #{_author_username}
                .ui.button.pull_post
                    i.download.icon
                    |get post
                +voting_full
                a.ui.large.inverted.button.zoomer(href=url target='_window')
                    i.external.icon
                    | #{url}
                each tags 
                    .ui.large.basic.inverted.label #{this}
                .ui.big.inverted.basic.label.zoomer.picker.pick_subreddit(title='browse subreddit')
                    +i name='reddit'
                    |subreddit #{subreddit}
                .ui.big.inverted.basic.label 
                    +i name='facebook-like'
                    | #{ups} upvotes
                .ui.big.inverted.basic.label 
                    +i name='chat'
                    | #{num_comments} comments