template(name='reddit')
    .ui.stackable.padded.grid
        .row
            .four.wide.column
                each picked_tags
                    button.ui.active.compact.big.rounded.fade.animated.button.unpick_tag(tabindex="0" class="#{loading_class} #{active_term_class}")
                        .visible.content
                            .ui.inline.small.header #{this}
                        .hidden.content
                            i.minus.icon
                            .ui.inline.small.header #{this}
                            
                        //- button.ui.active.large.button.unpick_tag(tabindex='0' style=background_style class=emotion_color)
                //- .ui.inline.small.header(class=emotion_color) {{fixed omega_doc.current_max_emotion_percent}}% #{omega_doc.current_most_emotion}
                // if not_searching 
                //     .ui.center.aligned.basic.segment
                //         i.massive.yin.yang.grey.icon
                // +session_toggle key='view_images' label='images' icon='image'
                // +session_toggle key='view_external' label='external' icon='external'
                .ui.icon.search.input(class=search_class)
                    // if is_loading
                    //     if home_subs_ready
                    unless is_loading
                        i.search.link.icon.refresh_agg
                        // i.yin.yang.big.loading.link.icon.reconnect
                    if is_loading
                        i.yin.yang.big.loading.icon
                    //- input#search(type='text' autofocus='' autocomplete="off" value=current_query)
                    input#search(type='text' autofocus='' autocomplete="off" placeholder='search reddit...')
                //- .ui.header #{connection.status}
                unless connected
                    //- .ui.header disconnected
                    //- .ui.hidden.divider
                    .ui.big.button
                        i.lightning.invert.big.link.icon
                        |reconnect
                //- div
                if connected
                    // if searching 
                    //     each terms 
                    //         +search_term
                    // else 
                    each unpicked_tags
                        +agg_tag
                // if in_dev 
                //     .ui.divider
                //     .ui.header is_loading #{is_loading}
                //     .ui.header current query  {{sval 'current_query'}}
                //     .ui.header dummy  {{sval 'dummy'}}
                // .ui.items
                // if doc_results
                //     .ui.divider
                // .ui.animated.big.link.divided.list.scrolling
                // .ui.hidden.divider
            .twelve.wide.column
                div.sorting
                    +sort_direction_toggle
                    +set_sort_key key='_timestamp' label='added'
                .ui.stackable.centered.cards
                    each doc_results
                        +reddit_card
                        // +small_card
                        // a.fluid.card(href=url target='_window' title=url) 
                        // +call_watson
                // if in_dev 
                .ui.list 
                    each doc_results
                        .item #{title} 
                            .ui.button.print_me
                                i.code.icon
template(name='reddit_card')
    a.card.fly_right(href="/reddit/#{_id}" title='view article') 
        if is_image
            img.ui.image(src=url)
        .content 
            .ui.small.header !{title}
            i.globe.grey.icon 
            |#{domain}
            i.thumbs.up.icon 
            |#{ups}
            i.comment.icon 
            |#{num_comments}
            .ui.inverted.label added #{_when}
        
// template(name='session_toggle')
//     .ui.button.toggle
//         i.large.icon(class=icon)
        
                   
template(name='shortcut')                   
    i.big.icon.go.spaced.zoomer(class=icon title=key)
                    
template(name='agg_tag')
    // button.ui.big.compact.basic.active.fade.animated.button.result(tabindex="0" title=count)
    button.ui.big.compact.basic.active.inverted.button.result(tabindex="0" title=count)
        // .visible.content
        if term_image
            img.ui.avatar.image(src="{{c.url term_image.image_id width=200 height=200 gravity='face' crop='fill'}}")

        | #{title}
        // .hidden.content
        //     |+ #{title}
        // if term.image
        //     //- button.ui.compact.button(tabindex="0" title=count)
        //     //- img.ui.mini.inline.image(src=term.image)
        //     img.ui.mini.inline.image(src=term.image)
        //     .ui.inline.small.thin.header(class=tag_result_class) #{title}
        // else
        //     //- button.ui.compact.button(tabindex="0" title=count)
        //- small #{count}


template(name='reddit_view')
    with current_doc 
        .ui.stackable.padded.grid 
            .sixteen.wide.column
                a.ui.button(href="/reddit")
                    +i name='reddit'
                    |reddit
                .ui.header #{title}
                +print_this
                .ui.list 
                    .item comment_count #{comment_count}
                    .item domain #{domain}
                    .item model #{model}
                    .item over_18 #{over_18}
                    .item permalink #{permalink}
                    .item reddit_id #{reddit_id}
                    .item tags #{tags}
                    .item thumbnail #{thumbnail}
                    .item url #{url}
                    .item _author_id #{_author_id}
                    .item _author_username #{_author_username}
                .ui.big.inverted.basic.label 
                    +i name='facebook-like'
                    |ups #{ups}
                .ui.big.inverted.basic.label 
                    +i name='chat'
                    | #{num_comments}