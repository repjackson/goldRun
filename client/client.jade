head
    title goldrun
    meta(name='viewport', content='user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name="msapplication-TileColor" content="#000000")
    meta(name="theme-color" content="#000000")
    link(rel='stylesheet' type='text/css' href='https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.css')
    link(href="https://fonts.googleapis.com/css?family=Ubuntu:300,400&display=swap" rel="stylesheet")
    link(rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png")
    link(rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png")
    link(rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png")
    link(rel="manifest" href="/site.webmanifest")
    link(rel="mask-icon" href="/safari-pinned-tab.svg" color="#000000")
    link(href="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/css/suneditor.min.css" rel="stylesheet")

    script(src='https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js')
    script(src='https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.js')
    
    //- script(src='https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.js')
    //- link(href='https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.css' rel='stylesheet')
    
    //- script(src='https://api.mapbox.com/mapbox-gl-js/v2.6.0/mapbox-gl.js')
    //- link(href='https://api.mapbox.com/mapbox-gl-js/v2.6.0/mapbox-gl.css' rel='stylesheet')

    
    script(src="https://cdn.jsdelivr.net/npm/sweetalert2@11")
    script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/suneditor.min.js")
    script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/src/lang/en.js")
    // link(rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
    //     integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
    //     crossorigin="")

    // script(src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
    //     integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
    //     crossorigin="")
    

    //- script(async='', src='https://www.googletagmanager.com/gtag/js?id=UA-140259454-1')
    script.
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        
        gtag('config', 'G-GLYPPRGJFQ');

    
    
template(name='layout')
    div(class=darkmode_class)
        // unless currentUser.darkmode
        // img.ui.fluid.image.checkin_banner(src="{{c.url 'frontrange' width=1000 height=1000 crop='crop'}}")
        +nav
        +yield
        +footer

// template(name='map')
//     <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1527.9701169651082!2d-105.25585774191387!3d40.0097825492517!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x876bedc5f7dbe969%3A0x1315eee779732075!2sShadow%20Creek%20Dr%2C%20Boulder%2C%20CO%2080303!5e0!3m2!1sen!2sus!4v1632511679104!5m2!1sen!2sus" width="600" height="450" style="border:0;" allowfullscreen="" loading="lazy"></iframe>

template(name='not_found')
    // +docs
    .ui.center.aligned.basic.segment
        .ui.header not found 
        a.ui.big.button(href="/docs")
            +i name='home'
            |home
// template(name="user_pill")
//     .ui.label(class=labelClass)
//         |#{username}







                
template(name='footer')
    .ui.fluid.segment.stackable.grid
        .two.column.row
            .column
                // .ui.accordion
                //     .title.zoomer
                //         .ui.small.inline.header 
                //             |goldrun is community supported and will never sell your info
                //         // i.dropdown.grey.icon
                //     .content
                //         img.ui.image(src="{{c.url 'dao_venmo'}}")
                // +music
                if currentUser.admin
                    with currentUser
                        +boolean_edit key='admin_mode' label='admin mode' icon='shield'
                if currentUser.admin_mode
                    .ui.inline.header 
                        i.blog.icon
                        |docs
                    each all_docs 
                        .ui.basic.image.label 
                            img.ui.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                            |#{title}
                            +model_label
                            +print_this
                            |#{when}
            if currentUser.admin_mode
                .column
                    .ui.inline.header 
                        |results
                    each result_docs 
                        .ui.label #{name}: #{count} [#{model}]
                    .ui.inline.header 
                        i.users.icon
                        |users
                    each all_users
                        .ui.big.basic.label 
                            a.ui.label.fly_down(href="/user/#{username}") 
                                img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                                |#{username}
                            +print_this
                            
                            
template(name='nav')
    // #topnav.topnav.ui.attached.borderless.big.four.item.menu.hscroll(class=darkmode_class)
        https://fomantic-ui.com/elements/icon.html#/icon
    // #topnav.topnav.ui.attached.borderless.big.menu.hscroll(style="background-color:#{currentUser.theme_color_main}")
    #topnav.topnav.ui.attached.borderless.large.menu.hscroll.alpha
        if currentUser
            a.item.zoomer.fly_down.add_doc 
                +i name='plus'
            // a.icon.item(href="/mail/inbox")
            //     +i name='inbox'
            a.fly_up.zoomer.item(href="/user/#{currentUser.username}" class=user_nav_button_class title='profile')
                if currentUser.image_id
                    img.ui.avatar.image(src="{{c.url currentUser.image_id width=200 height=200 gravity='face' crop='fill'}}")
                else
                    i.user.icon
                strong #{currentUser.username}
                |&nbsp;
                .ui.label(title='points') #{currentUser.points}p
                if unread_count
                    .ui.large.label #{unread_count}
        unless subs_ready
            .icon.item
                i.yin.yang.large.loading.icon
        unless currentUser
            // a.item(href="/register" title='register')
            //     +i name='plus'
            //     span.mobile.hidden register            
            a.item(href='/login' title='login') 
                // i.sign.in.big.icon
                +i name='internal'
                // span.mobile.hidden login
        unless is_connected
            .item
                i.yin.yang.big.loading.icon
                +i name='disconnected'
                |reconecting...
                i.large.circular.refresh.link.icon.zoomer.reconnect(title='reconnect now')
        if is_connected
            +nav_item key='post' icon='blog'
            +nav_item key='event' icon='calendar'
            +nav_item key='group' icon='campfire'
            +nav_item key='product' icon='shopping-cart'
            +nav_item key='transfer' icon='exchange'
            +nav_item key='service' icon='wrench'
            a.item.zoomer.fly_right.clear_search(href="/users" class="{{isActiveRoute 'users'}}" title=users)
                +i name='groups'


template(name='nav_item')
    a.item.zoomer.fly_right.clear_search.go_route(href="/m/#{key}" class="{{isActiveRoute 'docs'}}" title=key)
        +i name=icon


template(name='docs')
    .ui.stackable.padded.grid 
        // .sixteen.wide.column
            // .ui.inline.header 
            //     +i name='cube'
            //     |#{post_docs.count} docs
            // +facet key='doc_sentiment_label' icon='happy'
        .sixteen.wide.column
            .ui.inline.header
                +model_label
                |{{session_get 'model'}}s
            // +session_set key='model' value='post' label='post' icon='blog'
            // +session_set key='model' value='event' label='event' icon='calendar'
            // +session_set key='model' value='group' label='group' icon='campfire'
            // +session_set key='model' value='product' label='shop' icon='shopping-cart'
            // +session_set key='model' value='service' label='service' icon='wrench'
            if currentUser.admin_mode
                +session_set key='model' value='transfer' label='transfer' icon='exchange'
                +session_set key='model' value='rental' label='rental' icon='clock'
                +session_set key='model' value='task' label='task' icon='tasks'
                +session_set key='model' value='checkin' label='checkin' icon='checkmark'
                +session_set key='model' value='log' label='log' icon='event-log'
            +facet key='tag'
            div
            // +facet key='timestamp_tag' icon='clock' label='added'
            // +session_boolean_toggle key='view_mine' label='mine' icon='user'
            // +session_boolean_toggle key='view_private' label='private' icon='lock'
        .sixteen.wide.column
            .ui.inline.header(title='result count') #{result_docs.count}
            +search_input key='title'
            +sort_direction_toggle
            +sort_key_toggle
            // +session_set key='sort_key' value='_timestamp' label='added' icon='clock'
            // +session_set key='sort_key' value='points' label='points' icon='hashtag'
            // +session_set key='sort_key' value='views' label='views' icon='eye'
            if session_is 'model' 'event'
                +session_set key='sort_key' value='start_datatime' label='start' icon='calendar'
            // +session_set key='limit' value=10
            // +session_set key='limit' value=25
            // +session_set key='limit' value=100
            .scrolling
                if subs_ready
                    if one_result
                        .ui.one.cards
                            each result_docs 
                                +doc_card
                    else
                        .ui.cards
                            each result_docs 
                                +doc_card
                else 
                    .ui.center.aligned.basic.segment
                        i.massive.yin.yang.loading.grey.icon


template(name='sort_key_toggle')
    .ui.image.big.label.toggle_sort.pointer.zoomer(title=sort_title)
        i.sort.icon
        +i name=sort_icon
        |{{session_get 'sort_label'}}


template(name='doc_card')
    .ui.card.alpha
        // if background_image_id
        //     img.ui.image.item_background(src="{{c.url background_image_id height=1000 crop='crop'}}")
        // else if image_id
        //     img.ui.image.item_background(src="{{c.url image_id height=400 crop='crop'}}")
        if youtube_id
            +youtube_view key='youtube_id'
        else if image_id
            a.ui.image.fly_right.zoomer(href="/doc/#{_id}")
                img(src="{{c.url image_id height=300 width=500 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        .content
            +model_label
            if published 
                i.green.eye.icon(title='published')
            else 
                i.yellow.save.icon(title='draft')
            a.ui.inline.header.fly_right(href="/doc/#{_id}" class=emotion_color) #{title}
            .smallcut
                | !{content}
        
        +Template.dynamic template=item_template
        .content
            if is_dev
                +print_this
            +voting
            +favorite_icon_toggle
            if price
                .ui.big.label 
                    |#{price}pts
            // i.big.link.cart.plus.green.icon.add_to_cart
            .ui.label
                i.eye.icon
                |#{views}
            .ui.label   
                i.line.chart.icon
                |#{points} 
            +author_info
            if group_id     
                +group_info
            each seven_tags 
                .ui.basic.small.label #{this}
            .ui.small.basic.label(title='created when')
                |#{when}
            if watson 
                +doc_sentiment
                +doc_emotion

            a.ui.circular.basic.icon.button.zoomer.fly_right(href="/doc/#{_id}")
                +i name='chevron-right'
